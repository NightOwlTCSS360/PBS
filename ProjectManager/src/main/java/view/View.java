/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import control.PDC;
import java.io.File;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import javax.swing.JOptionPane;
import view.components.ExportDialog;


/**
 *
 * @author pihol
 */
public class View extends javax.swing.JFrame {

    /** The Persistent Data Controller used to access and change the User's Data */
    private PDC controller;
    /** The DashboardPanel that gets attached to the JFrame */
    private DashboardPanel dbp;
    /** The Dialog generated when exporting a Project */
    private ExportDialog exportDialog;
    /**
     * Creates new form StartGUI
     */
    public View(final PDC theController) {
        controller = theController;
        initComponents();
        LoginPanel login = new LoginPanel();
        LogoPanel logo = new LogoPanel();
        MainFrame.remove(jPanel2);
        MainFrame.remove(jPanel3);
        MainFrame.add(login, 0);
        MainFrame.add(logo, 1);
        MainFrame.revalidate();
        MainFrame.repaint();
        jMenuBar1.setVisible(false);
        this.pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        settingsDialog = new javax.swing.JDialog();
        usernameTextField = new javax.swing.JTextField();
        usernameLabel = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();
        emailLabel = new javax.swing.JLabel();
        saveSettingsButton = new javax.swing.JButton();
        cancelSettingsButton = new javax.swing.JButton();
        createProjectDialog = new javax.swing.JDialog();
        projectNameTextField = new javax.swing.JTextField();
        projectNameLabel = new javax.swing.JLabel();
        createProjectButton = new javax.swing.JButton();
        cancelProjectButton = new javax.swing.JButton();
        ImportProjectChooser = new javax.swing.JFileChooser();
        MainFrame = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        importProjectsMenuItem = new javax.swing.JMenuItem();
        exportProjectsMenuItem = new javax.swing.JMenuItem();
        settingsMenu = new javax.swing.JMenu();
        editSettingsMenuItem = new javax.swing.JMenuItem();
        importSettingsMenuItem = new javax.swing.JMenuItem();
        exportSettingsMenuItem = new javax.swing.JMenuItem();
        signOutMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        aboutMenuItem = new javax.swing.JMenuItem();

        usernameLabel.setText("First Name:");

        emailLabel.setText("Email:");

        saveSettingsButton.setText("Apply");
        saveSettingsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveSettingsButtonsaveSettingsAction(evt);
            }
        });

        cancelSettingsButton.setText("Cancel");
        cancelSettingsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelSettingsButtoncancelSettingsAction(evt);
            }
        });

        javax.swing.GroupLayout settingsDialogLayout = new javax.swing.GroupLayout(settingsDialog.getContentPane());
        settingsDialog.getContentPane().setLayout(settingsDialogLayout);
        settingsDialogLayout.setHorizontalGroup(
            settingsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settingsDialogLayout.createSequentialGroup()
                .addContainerGap(8, Short.MAX_VALUE)
                .addGroup(settingsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(settingsDialogLayout.createSequentialGroup()
                        .addGroup(settingsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usernameLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(emailLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(settingsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(usernameTextField)
                            .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(cancelSettingsButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveSettingsButton)
                .addContainerGap())
        );
        settingsDialogLayout.setVerticalGroup(
            settingsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsDialogLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(settingsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(settingsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 164, Short.MAX_VALUE)
                .addGroup(settingsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveSettingsButton)
                    .addComponent(cancelSettingsButton))
                .addContainerGap())
        );

        projectNameLabel.setText("Project Name:");

        createProjectButton.setText("Create");
        createProjectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createProjectButtoncreateProjectAction(evt);
            }
        });

        cancelProjectButton.setText("Cancel");
        cancelProjectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelProjectButtoncancelProjectAction(evt);
            }
        });

        javax.swing.GroupLayout createProjectDialogLayout = new javax.swing.GroupLayout(createProjectDialog.getContentPane());
        createProjectDialog.getContentPane().setLayout(createProjectDialogLayout);
        createProjectDialogLayout.setHorizontalGroup(
            createProjectDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createProjectDialogLayout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(createProjectDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(createProjectDialogLayout.createSequentialGroup()
                        .addComponent(projectNameLabel)
                        .addGap(18, 18, 18)
                        .addComponent(projectNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cancelProjectButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(createProjectButton)
                .addContainerGap())
        );
        createProjectDialogLayout.setVerticalGroup(
            createProjectDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createProjectDialogLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(createProjectDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(projectNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(projectNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 198, Short.MAX_VALUE)
                .addGroup(createProjectDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createProjectButton)
                    .addComponent(cancelProjectButton))
                .addContainerGap())
        );

        ImportProjectChooser.setAcceptAllFileFilterUsed(false);
        ImportProjectChooser.setApproveButtonText("Import");
        ImportProjectChooser.setFileFilter(new FileFilter() {

            @Override
            public boolean accept(File dir) {
                boolean result = false;
                if (dir != null && dir.toString() != null) {
                    result = dir.isDirectory() || dir.toString().toLowerCase().endsWith(".ser");
                }
                return result;
            }
            @Override
            public String getDescription(){
                return "Filters .ser";
            }
        });
        ImportProjectChooser.setFileHidingEnabled(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MainFrame.setBackground(new java.awt.Color(255, 255, 255));
        MainFrame.setToolTipText("");
        MainFrame.setLayout(new javax.swing.BoxLayout(MainFrame, javax.swing.BoxLayout.LINE_AXIS));

        jPanel2.setBackground(new java.awt.Color(250, 250, 250));
        jPanel2.setMaximumSize(new java.awt.Dimension(400, 32767));
        jPanel2.setPreferredSize(new java.awt.Dimension(400, 500));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 477, Short.MAX_VALUE)
        );

        MainFrame.add(jPanel2);

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));
        jPanel3.setPreferredSize(new java.awt.Dimension(400, 500));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 477, Short.MAX_VALUE)
        );

        MainFrame.add(jPanel3);

        fileMenu.setText("File");

        importProjectsMenuItem.setText("Import Projects");
        importProjectsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importProjectAction(evt);
            }
        });
        fileMenu.add(importProjectsMenuItem);

        exportProjectsMenuItem.setText("Export Projects");
        exportProjectsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportProjectAction(evt);
            }
        });
        fileMenu.add(exportProjectsMenuItem);

        jMenuBar1.add(fileMenu);

        settingsMenu.setText("Settings");

        editSettingsMenuItem.setText("Edit Settings");
        editSettingsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editSettingsMenuItemeditSettingsAction(evt);
            }
        });
        settingsMenu.add(editSettingsMenuItem);

        importSettingsMenuItem.setText("Import Settings");
        importSettingsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importSettingsMenuItemimportSettingsAction(evt);
            }
        });
        settingsMenu.add(importSettingsMenuItem);

        exportSettingsMenuItem.setText("Export Settings");
        exportSettingsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportSettingsMenuItemexportSettingsAction(evt);
            }
        });
        settingsMenu.add(exportSettingsMenuItem);

        signOutMenuItem.setText("Sign Out");
        signOutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signOutAction(evt);
            }
        });
        settingsMenu.add(signOutMenuItem);

        jMenuBar1.add(settingsMenu);

        helpMenu.setText("Help");

        aboutMenuItem.setText("About");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemaboutAction(evt);
            }
        });
        helpMenu.add(aboutMenuItem);

        jMenuBar1.add(helpMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainFrame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainFrame, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Action performed when Importing a Project. Prompts a user for the file of the
     * project to import.
     * @author Paul Schmidt
     * @author Jarvis Kampe
     * @param evt the button click event
     */
    private void importProjectAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importProjectsMenuItemimportSettingsAction
        int returnVal = ImportProjectChooser.showOpenDialog(View.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            try {
                controller.importProject(ImportProjectChooser.getSelectedFile());
                JOptionPane successPane = new JOptionPane("Imported Successfully!", JOptionPane.INFORMATION_MESSAGE);
                JDialog successDialog = successPane.createDialog(this, "Import Successful");
                successDialog.setAlwaysOnTop(true);
                successDialog.setVisible(true);
                dbp.repopulateProjectList();
            } catch (Exception e) {
                JOptionPane error = new JOptionPane("Error importing Project", JOptionPane.ERROR_MESSAGE);
                JDialog errorDialog = error.createDialog(this, "ERROR");
                errorDialog.setAlwaysOnTop(true);
                errorDialog.setVisible(true);
                System.out.print(e);
            }
        }
    }//GEN-LAST:event_importProjectsMenuItemimportSettingsAction

    /**
     * Action performed when Exporting a Project. Prompts a user for the file location to save the
     * exported project and the project to export.
     * @author Paul Schmidt
     * @author Jarvis Kampe
     * @param evt the button click event.
     */
    private void exportProjectAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportProjectsMenuItemimportSettingsAction
        exportDialog = new ExportDialog(this, true, controller);
        exportDialog.setVisible(true);
    }//GEN-LAST:event_exportProjectsMenuItemimportSettingsAction

    /**
     * Action performed when editing Settings.
     * @author Jarvis Kampe
     * @param evt the button click event.
     */
    private void editSettingsMenuItemeditSettingsAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editSettingsMenuItemeditSettingsAction
        settingsDialog.pack();
        settingsDialog.setLocationRelativeTo(null);
        usernameTextField.setText(controller.getCurrentUser().getMyUserFirstName());
        emailTextField.setText(controller.getCurrentUser().getUserEmail());
        settingsDialog.setVisible(true);
    }//GEN-LAST:event_editSettingsMenuItemeditSettingsAction

    /**
     * Action performed when importing Settings.
     * @author Jarvis Kampe
     * @param evt the button click event.
     */
    private void importSettingsMenuItemimportSettingsAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importSettingsMenuItemimportSettingsAction
        int returnVal = jFileChooser1.showOpenDialog(View.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            try {
                controller.importSettings(jFileChooser1.getSelectedFile());
            } catch (IOException ex) {
                Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_importSettingsMenuItemimportSettingsAction

    /**
     * Action performed when exporting Settings.
     * @author Jarvis Kampe
     * @param evt the button click event.
     */
    private void exportSettingsMenuItemexportSettingsAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportSettingsMenuItemexportSettingsAction
        int returnVal = jFileChooser1.showSaveDialog(View.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            try {
                controller.exportSettings(jFileChooser1.getSelectedFile());
            } catch (IOException ex) {
                Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_exportSettingsMenuItemexportSettingsAction

    /**
     * Action performed when opening the About Information.
     * @author Jarvis Kampe
     * @author Paul Schmidt
     * @param evt the button click event.
     */
    private void aboutMenuItemaboutAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemaboutAction
        javax.swing.JPanel MainFrame = (javax.swing.JPanel)this.MainFrame;
        AboutPanel about = new AboutPanel((javax.swing.JPanel)this.MainFrame.getComponent(0), controller);
        MainFrame.remove(0);
        setMenuBarVisibility(false);
        MainFrame.add(about);
        MainFrame.revalidate();
        MainFrame.repaint();
    }//GEN-LAST:event_aboutMenuItemaboutAction

    /**
     * Action performed when saving Settings.
     * @author Jarvis Kampe
     * @param evt the button click event.
     */
    private void saveSettingsButtonsaveSettingsAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveSettingsButtonsaveSettingsAction
        controller.setUserInfo(usernameTextField.getText(), emailTextField.getText());
        settingsDialog.dispose();
    }//GEN-LAST:event_saveSettingsButtonsaveSettingsAction

    /**
     * Action performed when canceling saving Settings.
     * @author Jarvis Kampe
     * @param evt the button click event.
     */
    private void cancelSettingsButtoncancelSettingsAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelSettingsButtoncancelSettingsAction
        settingsDialog.dispose();
    }//GEN-LAST:event_cancelSettingsButtoncancelSettingsAction

    /**
     * Action performed when Creating a Project.
     * @author Jarvis Kampe
     * @param evt the button click event.
     */
    private void createProjectButtoncreateProjectAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createProjectButtoncreateProjectAction
        try {
            controller.addNewProject(projectNameTextField.getText());
        } catch (IOException ex) {
            Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
        }
        createProjectDialog.dispose();
    }//GEN-LAST:event_createProjectButtoncreateProjectAction

    /**
     * Action performed when cancelling creating a Project.
     * @author Jarvis Kampe
     * @param evt the button click event.
     */
    private void cancelProjectButtoncancelProjectAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelProjectButtoncancelProjectAction
        createProjectDialog.dispose();
    }//GEN-LAST:event_cancelProjectButtoncancelProjectAction

    /**
     * Action performed when Signing the user out of the application.
     * @author Jarvis Kampe
     * @param evt the button click event.
     */
    private void signOutAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signOutAction
        if (controller.getCurrentUser() != null) {
            javax.swing.JPanel MainFrame = (javax.swing.JPanel)this.MainFrame;
            LoginPanel login = new LoginPanel();
            LogoPanel logo = new LogoPanel();
            MainFrame.remove(0);
            MainFrame.add(login, 0);
            MainFrame.add(logo, 1);
            MainFrame.revalidate();
            MainFrame.repaint();
            this.setMenuBarVisibility(false);
            controller.logoutUser();
            pack();
        }
    }//GEN-LAST:event_signOutAction

    /**
     * Return a reference to the PDC associated with this JFrame.
     * @author Paul Schmidt
     * @return the PDC reference.
     */
    public PDC getController() {
        return controller;
    }
    private void disableWelcome() {
        
    }

    /**
     * Sets the menu bar visibility of this JFrame.
     * @author Paul Schmidt
     * @param value the visibility of the menu bar. true for Visible, false otherwise.
     */
    public void setMenuBarVisibility(final boolean value) {
        jMenuBar1.setVisible(value);
    }

    /**
     * Sets the DashboardPanel object of this JFrame.
     * @author Paul Schmidt
     * @param customDashPanel the DashboardPanel object.
     */
    void setDashBoardPanel(final DashboardPanel customDashPanel) {
        dbp = customDashPanel;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser ImportProjectChooser;
    private javax.swing.JPanel MainFrame;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JButton cancelProjectButton;
    private javax.swing.JButton cancelSettingsButton;
    private javax.swing.JButton createProjectButton;
    private javax.swing.JDialog createProjectDialog;
    private javax.swing.JMenuItem editSettingsMenuItem;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JMenuItem exportProjectsMenuItem;
    private javax.swing.JMenuItem exportSettingsMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuItem importProjectsMenuItem;
    private javax.swing.JMenuItem importSettingsMenuItem;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel projectNameLabel;
    private javax.swing.JTextField projectNameTextField;
    private javax.swing.JButton saveSettingsButton;
    private javax.swing.JDialog settingsDialog;
    private javax.swing.JMenu settingsMenu;
    private javax.swing.JMenuItem signOutMenuItem;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables
}
